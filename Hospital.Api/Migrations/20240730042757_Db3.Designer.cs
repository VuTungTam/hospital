// <auto-generated />
using System;
using Hospital.Infra.EFConfigurations;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Hospital.Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240730042757_Db3")]
    partial class Db3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.31")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Hospital.Domain.Entities.Blogs.Blog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<long?>("Creator")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("DATETIME");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("DATETIME");

                    b.Property<long?>("Modifier")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(512)");

                    b.HasKey("Id");

                    b.ToTable("Blogs", (string)null);
                });

            modelBuilder.Entity("Hospital.Domain.Entities.Declarations.Declaration", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<long?>("Creator")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("DATETIME");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<int>("Did")
                        .HasColumnType("int");

                    b.Property<string>("Dname")
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<DateTime>("Dob")
                        .HasColumnType("DATETIME");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("DATETIME");

                    b.Property<long?>("Modifier")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(12)");

                    b.Property<int>("Pid")
                        .HasColumnType("int");

                    b.Property<string>("Pname")
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<long>("ServiceId")
                        .HasColumnType("bigint");

                    b.Property<int>("Wid")
                        .HasColumnType("int");

                    b.Property<string>("Wname")
                        .HasColumnType("NVARCHAR(255)");

                    b.HasKey("Id");

                    b.HasIndex("ServiceId");

                    b.ToTable("Declarations");
                });

            modelBuilder.Entity("Hospital.Domain.Entities.Declarations.DeclarationSymptom", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<long?>("Creator")
                        .HasColumnType("bigint");

                    b.Property<long>("DeclarationId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<long?>("Modifier")
                        .HasColumnType("bigint");

                    b.Property<long>("SymptomId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("DeclarationId");

                    b.HasIndex("SymptomId");

                    b.ToTable("DeclarationSymptom");
                });

            modelBuilder.Entity("Hospital.Domain.Entities.HeathFacilities.FacilityCategory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<long?>("Creator")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("DATETIME");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("DATETIME");

                    b.Property<long?>("Modifier")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(512)");

                    b.HasKey("Id");

                    b.ToTable("FacilityCategories", (string)null);
                });

            modelBuilder.Entity("Hospital.Domain.Entities.HeathFacilities.HealthFacility", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<long>("CategoryId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<long?>("Creator")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("DATETIME");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<int>("Did")
                        .HasColumnType("int");

                    b.Property<string>("Dname")
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("DECIMAL(9,6)");

                    b.Property<decimal>("Longtitude")
                        .HasColumnType("DECIMAL(9,6)");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("DATETIME");

                    b.Property<long?>("Modifier")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<string>("Phone")
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<int>("Pid")
                        .HasColumnType("int");

                    b.Property<string>("Pname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Website")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<int>("Wid")
                        .HasColumnType("int");

                    b.Property<string>("Wname")
                        .HasColumnType("NVARCHAR(255)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("HealthFacilities", (string)null);
                });

            modelBuilder.Entity("Hospital.Domain.Entities.HeathServices.HealthService", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<long?>("Creator")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<long>("FacilitySpecialtyId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<long?>("Modifier")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<decimal>("Price")
                        .HasColumnType("DECIMAL(18,2)");

                    b.Property<long>("TypeId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("FacilitySpecialtyId");

                    b.HasIndex("TypeId");

                    b.ToTable("HealthServices", (string)null);
                });

            modelBuilder.Entity("Hospital.Domain.Entities.HeathServices.ServiceType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<long?>("Creator")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("DATETIME");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("DATETIME");

                    b.Property<long?>("Modifier")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(512)");

                    b.HasKey("Id");

                    b.ToTable("ServiceTypes", (string)null);
                });

            modelBuilder.Entity("Hospital.Domain.Entities.SocialNetworks.SocialNetwork", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<long?>("Creator")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("DATETIME");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<string>("Logo")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("DATETIME");

                    b.Property<long?>("Modifier")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(512)");

                    b.HasKey("Id");

                    b.ToTable("SocialNetworks", (string)null);
                });

            modelBuilder.Entity("Hospital.Domain.Entities.Specialties.FacilitySpecialty", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<long?>("Creator")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("FacilityId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<long?>("Modifier")
                        .HasColumnType("bigint");

                    b.Property<long>("SpecialtyId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("FacilityId");

                    b.HasIndex("SpecialtyId");

                    b.ToTable("FacilitySpecialty");
                });

            modelBuilder.Entity("Hospital.Domain.Entities.Specialties.Specialty", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<long?>("Creator")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("DATETIME");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("DATETIME");

                    b.Property<long?>("Modifier")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(512)");

                    b.HasKey("Id");

                    b.ToTable("Specialisties", (string)null);
                });

            modelBuilder.Entity("Hospital.Domain.Entities.Symptoms.Symptom", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<long?>("Creator")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("DATETIME");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("DATETIME");

                    b.Property<long?>("Modifier")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(512)");

                    b.HasKey("Id");

                    b.ToTable("Symptoms", (string)null);
                });

            modelBuilder.Entity("Hospital.SharedKernel.Infrastructure.Repositories.Locations.Entites.District", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ProvinceId")
                        .HasColumnType("bigint");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("location_districts");
                });

            modelBuilder.Entity("Hospital.SharedKernel.Infrastructure.Repositories.Locations.Entites.Province", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Slug")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("location_provinces");
                });

            modelBuilder.Entity("Hospital.SharedKernel.Infrastructure.Repositories.Locations.Entites.Ward", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("DistrictId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("location_wards");
                });

            modelBuilder.Entity("Hospital.Domain.Entities.Declarations.Declaration", b =>
                {
                    b.HasOne("Hospital.Domain.Entities.HeathServices.HealthService", "HealthService")
                        .WithMany("Declarations")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HealthService");
                });

            modelBuilder.Entity("Hospital.Domain.Entities.Declarations.DeclarationSymptom", b =>
                {
                    b.HasOne("Hospital.Domain.Entities.Declarations.Declaration", "Declaration")
                        .WithMany("DeclarationSymptom")
                        .HasForeignKey("DeclarationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hospital.Domain.Entities.Symptoms.Symptom", "Symptom")
                        .WithMany("DeclarationSymptom")
                        .HasForeignKey("SymptomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Declaration");

                    b.Navigation("Symptom");
                });

            modelBuilder.Entity("Hospital.Domain.Entities.HeathFacilities.HealthFacility", b =>
                {
                    b.HasOne("Hospital.Domain.Entities.HeathFacilities.FacilityCategory", "Category")
                        .WithMany("Facilities")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Hospital.Domain.Entities.HeathServices.HealthService", b =>
                {
                    b.HasOne("Hospital.Domain.Entities.Specialties.FacilitySpecialty", "FacilitySpecialty")
                        .WithMany("Services")
                        .HasForeignKey("FacilitySpecialtyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hospital.Domain.Entities.HeathServices.ServiceType", "ServiceType")
                        .WithMany("Services")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FacilitySpecialty");

                    b.Navigation("ServiceType");
                });

            modelBuilder.Entity("Hospital.Domain.Entities.Specialties.FacilitySpecialty", b =>
                {
                    b.HasOne("Hospital.Domain.Entities.HeathFacilities.HealthFacility", "Facility")
                        .WithMany("FacilitySpecialties")
                        .HasForeignKey("FacilityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hospital.Domain.Entities.Specialties.Specialty", "Specialty")
                        .WithMany("FacilitySpecialties")
                        .HasForeignKey("SpecialtyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Facility");

                    b.Navigation("Specialty");
                });

            modelBuilder.Entity("Hospital.Domain.Entities.Declarations.Declaration", b =>
                {
                    b.Navigation("DeclarationSymptom");
                });

            modelBuilder.Entity("Hospital.Domain.Entities.HeathFacilities.FacilityCategory", b =>
                {
                    b.Navigation("Facilities");
                });

            modelBuilder.Entity("Hospital.Domain.Entities.HeathFacilities.HealthFacility", b =>
                {
                    b.Navigation("FacilitySpecialties");
                });

            modelBuilder.Entity("Hospital.Domain.Entities.HeathServices.HealthService", b =>
                {
                    b.Navigation("Declarations");
                });

            modelBuilder.Entity("Hospital.Domain.Entities.HeathServices.ServiceType", b =>
                {
                    b.Navigation("Services");
                });

            modelBuilder.Entity("Hospital.Domain.Entities.Specialties.FacilitySpecialty", b =>
                {
                    b.Navigation("Services");
                });

            modelBuilder.Entity("Hospital.Domain.Entities.Specialties.Specialty", b =>
                {
                    b.Navigation("FacilitySpecialties");
                });

            modelBuilder.Entity("Hospital.Domain.Entities.Symptoms.Symptom", b =>
                {
                    b.Navigation("DeclarationSymptom");
                });
#pragma warning restore 612, 618
        }
    }
}
