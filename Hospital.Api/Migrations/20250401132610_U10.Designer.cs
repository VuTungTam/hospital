// <auto-generated />
using System;
using Hospital.Infrastructure.EFConfigurations;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Hospital.Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250401132610_U10")]
    partial class U10
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.31")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Hospital.Domain.Entities.Articles.Article", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContentEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("DATETIME");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIT")
                        .HasDefaultValue(false);

                    b.Property<bool?>("IsHighlight")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIT")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("DATETIME");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("PostDate")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(1048)");

                    b.Property<short>("Status")
                        .HasColumnType("SMALLINT");

                    b.Property<string>("Summary")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<string>("SummaryEn")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(1024)");

                    b.Property<string>("TitleEn")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(1024)");

                    b.Property<string>("TitleSeo")
                        .HasColumnType("NVARCHAR(1024)");

                    b.Property<string>("Toc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TocEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ViewCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Title");

                    b.ToTable("tbl_articles");
                });

            modelBuilder.Entity("Hospital.Domain.Entities.Bookings.Booking", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(32)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Date")
                        .HasColumnType("DATE");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("DATETIME");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("DoctorId")
                        .HasColumnType("bigint");

                    b.Property<TimeSpan>("EndBooking")
                        .HasColumnType("TIME");

                    b.Property<long>("FacilityId")
                        .HasColumnType("bigint");

                    b.Property<long>("HealthProfileId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFeedbacked")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("DATETIME");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<long>("OwnerId")
                        .HasColumnType("bigint");

                    b.Property<long>("ServiceId")
                        .HasColumnType("bigint");

                    b.Property<TimeSpan>("StartBooking")
                        .HasColumnType("TIME");

                    b.Property<short>("Status")
                        .HasColumnType("SMALLINT");

                    b.Property<long>("TimeSlotId")
                        .HasColumnType("bigint");

                    b.Property<long>("ZoneId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("HealthProfileId");

                    b.HasIndex("ServiceId");

                    b.HasIndex("TimeSlotId");

                    b.ToTable("tbl_bookings");
                });

            modelBuilder.Entity("Hospital.Domain.Entities.Bookings.BookingSymptom", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<long>("BookingId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("SymptomId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("BookingId");

                    b.HasIndex("SymptomId");

                    b.ToTable("tbl_booking_symptom");
                });

            modelBuilder.Entity("Hospital.Domain.Entities.Distances.Distance", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<double>("DestinationLatitude")
                        .HasColumnType("float");

                    b.Property<double>("DestinationLongitude")
                        .HasColumnType("float");

                    b.Property<double>("DistanceMeter")
                        .HasColumnType("float");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<double>("SourceLatitude")
                        .HasColumnType("float");

                    b.Property<double>("SourceLongitude")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("tbl_distances");
                });

            modelBuilder.Entity("Hospital.Domain.Entities.Doctors.Doctor", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("Address")
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<string>("AliasLogin")
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(32)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("DATETIME");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<int>("Did")
                        .HasColumnType("int");

                    b.Property<string>("Dname")
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<DateTime?>("Dob")
                        .HasColumnType("DATETIME");

                    b.Property<int>("DoctorDegree")
                        .HasColumnType("int");

                    b.Property<int>("DoctorRank")
                        .HasColumnType("int");

                    b.Property<int>("DoctorTitle")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<string>("Expertise")
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<long>("FacilityId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDefaultPassword")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsPasswordChangeRequired")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Json")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("LastSeen")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("DATETIME");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<string>("Password")
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<string>("Phone")
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<string>("PhotoUrl")
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<int>("Pid")
                        .HasColumnType("int");

                    b.Property<string>("Pname")
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<string>("Provider")
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<int>("Shard")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("TrainingProcess")
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<int>("Wid")
                        .HasColumnType("int");

                    b.Property<string>("Wname")
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<string>("WorkExperience")
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<string>("ZaloId")
                        .HasColumnType("NVARCHAR(20)");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("Email");

                    b.HasIndex("Name");

                    b.HasIndex("Phone");

                    b.ToTable("mcs_doctors");
                });

            modelBuilder.Entity("Hospital.Domain.Entities.FacilityTypes.FacilityType", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("DATETIME");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("DescriptionEn")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<string>("DescriptionVn")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<string>("NameVn")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(512)");

                    b.HasKey("Id");

                    b.ToTable("tbl_facility_types");
                });

            modelBuilder.Entity("Hospital.Domain.Entities.Feedbacks.Feedback", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("BookingCode")
                        .IsRequired()
                        .HasColumnType("VARCHAR(32)");

                    b.Property<long>("BookingId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("FacilityId")
                        .HasColumnType("bigint");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(MAX)");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("DATETIME");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("OwnerId")
                        .HasColumnType("bigint");

                    b.Property<int>("Stars")
                        .HasColumnType("INT");

                    b.HasKey("Id");

                    b.HasIndex("BookingId")
                        .IsUnique();

                    b.ToTable("tbl_feedbacks");
                });

            modelBuilder.Entity("Hospital.Domain.Entities.HealthFacilities.FacilityTypeMapping", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<long>("FacilityId")
                        .HasColumnType("bigint");

                    b.Property<long>("TypeId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("FacilityId");

                    b.HasIndex("TypeId");

                    b.ToTable("tbl_facility_type_mappings");
                });

            modelBuilder.Entity("Hospital.Domain.Entities.HealthFacilities.HealthFacility", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("Address")
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("DATETIME");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("DescriptionEn")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<string>("DescriptionVn")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<int>("Did")
                        .HasColumnType("int");

                    b.Property<string>("Dname")
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("DECIMAL(9,6)");

                    b.Property<decimal>("Longtitude")
                        .HasColumnType("DECIMAL(9,6)");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("DATETIME");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<string>("NameVn")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<string>("Phone")
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<int>("Pid")
                        .HasColumnType("int");

                    b.Property<string>("Pname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("StarPoint")
                        .HasColumnType("float");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("TotalFeedback")
                        .HasColumnType("INT");

                    b.Property<int>("TotalStars")
                        .HasColumnType("INT");

                    b.Property<string>("Website")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<int>("Wid")
                        .HasColumnType("int");

                    b.Property<string>("Wname")
                        .HasColumnType("NVARCHAR(255)");

                    b.HasKey("Id");

                    b.ToTable("tbl_health_facilities");
                });

            modelBuilder.Entity("Hospital.Domain.Entities.HealthProfiles.HealthProfile", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("Address")
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<string>("CICode")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(15)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("DATETIME");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<int>("Did")
                        .HasColumnType("int");

                    b.Property<string>("Dname")
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<DateTime>("Dob")
                        .HasColumnType("DATETIME");

                    b.Property<int>("Eid")
                        .HasColumnType("int");

                    b.Property<string>("Ethinic")
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("DATETIME");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<long>("OwnerId")
                        .HasColumnType("bigint");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(12)");

                    b.Property<int>("Pid")
                        .HasColumnType("int");

                    b.Property<string>("Pname")
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<int>("Wid")
                        .HasColumnType("int");

                    b.Property<string>("Wname")
                        .HasColumnType("NVARCHAR(255)");

                    b.HasKey("Id");

                    b.ToTable("tbl_health_profiles");
                });

            modelBuilder.Entity("Hospital.Domain.Entities.HealthServices.HealthService", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("DATETIME");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("DescriptionEn")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<string>("DescriptionVn")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<long>("DoctorId")
                        .HasColumnType("bigint");

                    b.Property<long>("FacilityId")
                        .HasColumnType("bigint");

                    b.Property<long?>("FacilitySpecialtyId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("DATETIME");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<string>("NameVn")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<decimal>("Price")
                        .HasColumnType("DECIMAL(18,2)");

                    b.Property<long>("SpecialtyId")
                        .HasColumnType("bigint");

                    b.Property<double>("StarPoint")
                        .HasColumnType("float");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("TotalFeedback")
                        .HasColumnType("INT");

                    b.Property<int>("TotalStars")
                        .HasColumnType("INT");

                    b.Property<long>("TypeId")
                        .HasColumnType("bigint");

                    b.Property<long>("ZoneId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("FacilitySpecialtyId");

                    b.HasIndex("TypeId");

                    b.ToTable("tbl_health_services");
                });

            modelBuilder.Entity("Hospital.Domain.Entities.HealthServices.ServiceType", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("DATETIME");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("DATETIME");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<string>("NameVn")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(512)");

                    b.HasKey("Id");

                    b.ToTable("tbl_service_types");
                });

            modelBuilder.Entity("Hospital.Domain.Entities.ServiceTimeRules.ServiceTimeRule", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<int>("DayOfWeek")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<TimeSpan>("EndBreakTime")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("time");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MaxPatients")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("ServiceId")
                        .HasColumnType("bigint");

                    b.Property<int>("SlotDuration")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("StartBreakTime")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.HasIndex("ServiceId");

                    b.ToTable("tbl_service_time_rules");
                });

            modelBuilder.Entity("Hospital.Domain.Entities.SocialNetworks.SocialNetwork", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("DATETIME");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<string>("Logo")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("DATETIME");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<string>("Qr")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tbl_social_networks");
                });

            modelBuilder.Entity("Hospital.Domain.Entities.Specialties.DoctorSpecialty", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<long>("DoctorId")
                        .HasColumnType("bigint");

                    b.Property<long>("SpecialtyId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("DoctorId");

                    b.HasIndex("SpecialtyId");

                    b.ToTable("tbl_doctor_specialty");
                });

            modelBuilder.Entity("Hospital.Domain.Entities.Specialties.FacilitySpecialty", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("FacilityId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long>("SpecialtyId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("FacilityId");

                    b.HasIndex("SpecialtyId");

                    b.ToTable("tbl_facility_specialty");
                });

            modelBuilder.Entity("Hospital.Domain.Entities.Specialties.Specialty", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("DATETIME");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("DATETIME");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<string>("NameVn")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(512)");

                    b.HasKey("Id");

                    b.ToTable("tbl_specialties");
                });

            modelBuilder.Entity("Hospital.Domain.Entities.Symptoms.Symptom", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("DATETIME");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("DATETIME");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<string>("NameVn")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(512)");

                    b.HasKey("Id");

                    b.ToTable("tbl_symptoms");
                });

            modelBuilder.Entity("Hospital.Domain.Entities.TimeSlots.TimeSlot", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("DATETIME");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<TimeSpan>("End")
                        .HasColumnType("TIME");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIT")
                        .HasDefaultValue(false);

                    b.Property<TimeSpan>("Start")
                        .HasColumnType("TIME");

                    b.Property<long>("TimeRuleId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("TimeRuleId");

                    b.ToTable("tbl_time_slots");
                });

            modelBuilder.Entity("Hospital.SharedKernel.Domain.Entities.Auths.Action", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(32)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(1024)");

                    b.Property<int>("Exponent")
                        .HasColumnType("int");

                    b.Property<bool>("IsInternal")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<string>("NameEn")
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<long>("ParentId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.ToTable("perm_actions");
                });

            modelBuilder.Entity("Hospital.SharedKernel.Domain.Entities.Auths.LoginHistory", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Ip")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Origin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("UA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("mcs_login_histories");
                });

            modelBuilder.Entity("Hospital.SharedKernel.Domain.Entities.Auths.RefreshToken", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("CurrentAccessToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("OwnerId")
                        .HasColumnType("bigint");

                    b.Property<string>("RefreshTokenValue")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("mcs_refresh_tokens");
                });

            modelBuilder.Entity("Hospital.SharedKernel.Domain.Entities.Auths.Role", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(32)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<string>("NameEn")
                        .HasColumnType("NVARCHAR(255)");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.ToTable("perm_roles");
                });

            modelBuilder.Entity("Hospital.SharedKernel.Domain.Entities.Auths.RoleAction", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<long>("ActionId")
                        .HasColumnType("bigint");

                    b.Property<long>("RoleId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ActionId");

                    b.HasIndex("RoleId");

                    b.ToTable("perm_roles_actions");
                });

            modelBuilder.Entity("Hospital.SharedKernel.Domain.Entities.Customers.Customer", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("Address")
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<string>("AliasLogin")
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(32)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("DATETIME");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<int>("Did")
                        .HasColumnType("int");

                    b.Property<string>("Dname")
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<DateTime?>("Dob")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<bool>("EmailVerified")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDefaultPassword")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsPasswordChangeRequired")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Json")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("LastPurchase")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime?>("LastSeen")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("DATETIME");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<string>("Password")
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<string>("Phone")
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<bool>("PhoneVerified")
                        .HasColumnType("bit");

                    b.Property<string>("PhotoUrl")
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<int>("Pid")
                        .HasColumnType("int");

                    b.Property<string>("Pname")
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<string>("Provider")
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<int>("Shard")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalSpending")
                        .HasColumnType("DECIMAL(19,2)");

                    b.Property<int>("Wid")
                        .HasColumnType("int");

                    b.Property<string>("Wname")
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<string>("ZaloId")
                        .HasColumnType("NVARCHAR(20)");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("Email");

                    b.HasIndex("Name");

                    b.HasIndex("Phone");

                    b.ToTable("mcs_customers");
                });

            modelBuilder.Entity("Hospital.SharedKernel.Domain.Entities.Employees.Employee", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("Address")
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<string>("AliasLogin")
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(32)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("DATETIME");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<int>("Did")
                        .HasColumnType("int");

                    b.Property<string>("Dname")
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<DateTime?>("Dob")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<long>("FacilityId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDefaultPassword")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsPasswordChangeRequired")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Json")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("LastSeen")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("DATETIME");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<string>("Password")
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<string>("Phone")
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<string>("PhotoUrl")
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<int>("Pid")
                        .HasColumnType("int");

                    b.Property<string>("Pname")
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<string>("Provider")
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<string>("ScheduleColor")
                        .HasColumnType("VARCHAR(7)");

                    b.Property<int>("Shard")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("Wid")
                        .HasColumnType("int");

                    b.Property<string>("Wname")
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<string>("ZaloId")
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<long>("ZoneId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("Email");

                    b.HasIndex("Name");

                    b.HasIndex("Phone");

                    b.ToTable("mcs_employees");
                });

            modelBuilder.Entity("Hospital.SharedKernel.Domain.Entities.Employees.EmployeeAction", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<long>("ActionId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("EmployeeId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsExclude")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIT")
                        .HasDefaultValueSql("0");

                    b.HasKey("Id");

                    b.HasIndex("ActionId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("perm_employee_action_map");
                });

            modelBuilder.Entity("Hospital.SharedKernel.Domain.Entities.Employees.EmployeeRole", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("EmployeeId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("RoleId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("RoleId");

                    b.ToTable("perm_employee_role_map");
                });

            modelBuilder.Entity("Hospital.SharedKernel.Domain.Entities.Systems.SystemConfiguration", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("BookingNotificationBccEmails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BookingNotificationEmail")
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<bool?>("IsEnabledVerifiedAccount")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIT")
                        .HasDefaultValue(true);

                    b.Property<int>("MaxNumberOfSmsPerDay")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("DATETIME");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<int?>("PasswordMinLength")
                        .HasColumnType("int");

                    b.Property<bool?>("PreventCopying")
                        .HasColumnType("bit");

                    b.Property<int>("RequiresPasswordLevel")
                        .HasColumnType("int");

                    b.Property<int?>("Session")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("mcs_system_configurations");
                });

            modelBuilder.Entity("Hospital.SharedKernel.Infrastructure.Repositories.Locations.Entites.District", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ProvinceId")
                        .HasColumnType("bigint");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("location_districts");
                });

            modelBuilder.Entity("Hospital.SharedKernel.Infrastructure.Repositories.Locations.Entites.Province", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Slug")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("location_provinces");
                });

            modelBuilder.Entity("Hospital.SharedKernel.Infrastructure.Repositories.Locations.Entites.Ward", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<long>("DistrictId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("location_wards");
                });

            modelBuilder.Entity("Hospital.SharedKernel.Infrastructure.Repositories.Sequences.Entities.Sequence", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<int>("Length")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("Prefix")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Suffix")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Table")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("mcs_sequences");
                });

            modelBuilder.Entity("Hospital.SharedKernel.Modules.Notifications.Entities.Notification", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("Data")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("DATETIME");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(MAX)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIT")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsUnread")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIT(1)")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("DATETIME");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("OwnerId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<byte>("Type")
                        .HasColumnType("TINYINT");

                    b.HasKey("Id");

                    b.ToTable("mcs_notifications");
                });

            modelBuilder.Entity("Hospital.Domain.Entities.Bookings.Booking", b =>
                {
                    b.HasOne("Hospital.Domain.Entities.HealthProfiles.HealthProfile", "HealthProfile")
                        .WithMany("Bookings")
                        .HasForeignKey("HealthProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hospital.Domain.Entities.HealthServices.HealthService", "Service")
                        .WithMany("Bookings")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hospital.Domain.Entities.TimeSlots.TimeSlot", "TimeSlot")
                        .WithMany()
                        .HasForeignKey("TimeSlotId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HealthProfile");

                    b.Navigation("Service");

                    b.Navigation("TimeSlot");
                });

            modelBuilder.Entity("Hospital.Domain.Entities.Bookings.BookingSymptom", b =>
                {
                    b.HasOne("Hospital.Domain.Entities.Bookings.Booking", "Booking")
                        .WithMany("BookingSymptoms")
                        .HasForeignKey("BookingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hospital.Domain.Entities.Symptoms.Symptom", "Symptom")
                        .WithMany("BookingSymptom")
                        .HasForeignKey("SymptomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Booking");

                    b.Navigation("Symptom");
                });

            modelBuilder.Entity("Hospital.Domain.Entities.Feedbacks.Feedback", b =>
                {
                    b.HasOne("Hospital.Domain.Entities.Bookings.Booking", "Booking")
                        .WithOne("Feedback")
                        .HasForeignKey("Hospital.Domain.Entities.Feedbacks.Feedback", "BookingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Booking");
                });

            modelBuilder.Entity("Hospital.Domain.Entities.HealthFacilities.FacilityTypeMapping", b =>
                {
                    b.HasOne("Hospital.Domain.Entities.HealthFacilities.HealthFacility", "Facility")
                        .WithMany("FacilityTypeMappings")
                        .HasForeignKey("FacilityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hospital.Domain.Entities.FacilityTypes.FacilityType", "Type")
                        .WithMany("FacilityTypeMappings")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Facility");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("Hospital.Domain.Entities.HealthServices.HealthService", b =>
                {
                    b.HasOne("Hospital.Domain.Entities.Specialties.FacilitySpecialty", null)
                        .WithMany("Services")
                        .HasForeignKey("FacilitySpecialtyId");

                    b.HasOne("Hospital.Domain.Entities.HealthServices.ServiceType", "ServiceType")
                        .WithMany("Services")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ServiceType");
                });

            modelBuilder.Entity("Hospital.Domain.Entities.ServiceTimeRules.ServiceTimeRule", b =>
                {
                    b.HasOne("Hospital.Domain.Entities.HealthServices.HealthService", "Service")
                        .WithMany("TimeRules")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Service");
                });

            modelBuilder.Entity("Hospital.Domain.Entities.Specialties.DoctorSpecialty", b =>
                {
                    b.HasOne("Hospital.Domain.Entities.Doctors.Doctor", "Doctor")
                        .WithMany("DoctorSpecialties")
                        .HasForeignKey("DoctorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hospital.Domain.Entities.Specialties.Specialty", "Specialty")
                        .WithMany()
                        .HasForeignKey("SpecialtyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Doctor");

                    b.Navigation("Specialty");
                });

            modelBuilder.Entity("Hospital.Domain.Entities.Specialties.FacilitySpecialty", b =>
                {
                    b.HasOne("Hospital.Domain.Entities.HealthFacilities.HealthFacility", "Facility")
                        .WithMany("FacilitySpecialties")
                        .HasForeignKey("FacilityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hospital.Domain.Entities.Specialties.Specialty", "Specialty")
                        .WithMany("FacilitySpecialties")
                        .HasForeignKey("SpecialtyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Facility");

                    b.Navigation("Specialty");
                });

            modelBuilder.Entity("Hospital.Domain.Entities.TimeSlots.TimeSlot", b =>
                {
                    b.HasOne("Hospital.Domain.Entities.ServiceTimeRules.ServiceTimeRule", "ServiceTimeRule")
                        .WithMany("TimeSlots")
                        .HasForeignKey("TimeRuleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ServiceTimeRule");
                });

            modelBuilder.Entity("Hospital.SharedKernel.Domain.Entities.Auths.RoleAction", b =>
                {
                    b.HasOne("Hospital.SharedKernel.Domain.Entities.Auths.Action", "Action")
                        .WithMany("RoleActions")
                        .HasForeignKey("ActionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hospital.SharedKernel.Domain.Entities.Auths.Role", "Role")
                        .WithMany("RoleActions")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Action");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Hospital.SharedKernel.Domain.Entities.Employees.EmployeeAction", b =>
                {
                    b.HasOne("Hospital.SharedKernel.Domain.Entities.Auths.Action", "Action")
                        .WithMany()
                        .HasForeignKey("ActionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hospital.SharedKernel.Domain.Entities.Employees.Employee", null)
                        .WithMany("EmployeeActions")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Action");
                });

            modelBuilder.Entity("Hospital.SharedKernel.Domain.Entities.Employees.EmployeeRole", b =>
                {
                    b.HasOne("Hospital.SharedKernel.Domain.Entities.Employees.Employee", "Employee")
                        .WithMany("EmployeeRoles")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hospital.SharedKernel.Domain.Entities.Auths.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Hospital.Domain.Entities.Bookings.Booking", b =>
                {
                    b.Navigation("BookingSymptoms");

                    b.Navigation("Feedback");
                });

            modelBuilder.Entity("Hospital.Domain.Entities.Doctors.Doctor", b =>
                {
                    b.Navigation("DoctorSpecialties");
                });

            modelBuilder.Entity("Hospital.Domain.Entities.FacilityTypes.FacilityType", b =>
                {
                    b.Navigation("FacilityTypeMappings");
                });

            modelBuilder.Entity("Hospital.Domain.Entities.HealthFacilities.HealthFacility", b =>
                {
                    b.Navigation("FacilitySpecialties");

                    b.Navigation("FacilityTypeMappings");
                });

            modelBuilder.Entity("Hospital.Domain.Entities.HealthProfiles.HealthProfile", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("Hospital.Domain.Entities.HealthServices.HealthService", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("TimeRules");
                });

            modelBuilder.Entity("Hospital.Domain.Entities.HealthServices.ServiceType", b =>
                {
                    b.Navigation("Services");
                });

            modelBuilder.Entity("Hospital.Domain.Entities.ServiceTimeRules.ServiceTimeRule", b =>
                {
                    b.Navigation("TimeSlots");
                });

            modelBuilder.Entity("Hospital.Domain.Entities.Specialties.FacilitySpecialty", b =>
                {
                    b.Navigation("Services");
                });

            modelBuilder.Entity("Hospital.Domain.Entities.Specialties.Specialty", b =>
                {
                    b.Navigation("FacilitySpecialties");
                });

            modelBuilder.Entity("Hospital.Domain.Entities.Symptoms.Symptom", b =>
                {
                    b.Navigation("BookingSymptom");
                });

            modelBuilder.Entity("Hospital.SharedKernel.Domain.Entities.Auths.Action", b =>
                {
                    b.Navigation("RoleActions");
                });

            modelBuilder.Entity("Hospital.SharedKernel.Domain.Entities.Auths.Role", b =>
                {
                    b.Navigation("RoleActions");

                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("Hospital.SharedKernel.Domain.Entities.Employees.Employee", b =>
                {
                    b.Navigation("EmployeeActions");

                    b.Navigation("EmployeeRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
