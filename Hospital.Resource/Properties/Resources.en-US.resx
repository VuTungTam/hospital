<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Account.RegSuccessedPleaseCheckEmail" xml:space="preserve">
    <value>Account registration successful, please check your email, if not found, please check spam</value>
  </data>
  <data name="Account.SendEmailSuccessed" xml:space="preserve">
    <value>Email has been sent successfully, please check your email, if not found, please check spam</value>
  </data>
  <data name="Account.VerificationCodeHasExpired" xml:space="preserve">
    <value>Verification code has expired. Please contact the admin to receive the new code!</value>
  </data>
  <data name="Account.VerificationInfomationIsNotValid" xml:space="preserve">
    <value>Verify failed, the verify information is not valid</value>
  </data>
  <data name="Authentication.AccountHasNotBeenVerified" xml:space="preserve">
    <value>The account has not been verified</value>
  </data>
  <data name="Account.IsBanned" xml:space="preserve">
    <value>The account is banned</value>
  </data>
  <data name="Account.IsInactive" xml:space="preserve">
    <value>The account is inactive</value>
  </data>
  <data name="Authentication.AccountMustNotBeEmpty" xml:space="preserve">
    <value>Account must not be empty</value>
  </data>
  <data name="Account.NotFound" xml:space="preserve">
    <value>Not found this user</value>
  </data>
  <data name="Authentication.DateOfBirthIsNotValid" xml:space="preserve">
    <value>Date of birth is not valid</value>
  </data>
  <data name="Authentication.DateOfBirthMustNotBeEmpty" xml:space="preserve">
    <value>Date of birth must not be empty</value>
  </data>
  <data name="Account.EmailAlreadyExists" xml:space="preserve">
    <value>This email already exist on our system. Please use another email and try again</value>
  </data>
  <data name="CommonMessage.EmailIsNotValid" xml:space="preserve">
    <value>Email is not valid</value>
  </data>
  <data name="Authentication.EmailMustNotBeEmpty" xml:space="preserve">
    <value>Email must not be empty</value>
  </data>
  <data name="Authentication.FacebookInformationIsNotValid" xml:space="preserve">
    <value>Facebook authenticate information is not valid</value>
  </data>
  <data name="Authentication.FirstNameMustNotBeEmpty" xml:space="preserve">
    <value>First name must not be empty</value>
  </data>
  <data name="Authentication.FullNameMustNotBeEmpty" xml:space="preserve">
    <value>Full name must not be empty</value>
  </data>
  <data name="Authentication.GithubInformationIsNotValid" xml:space="preserve">
    <value>The Github information is not valid</value>
  </data>
  <data name="Authentication.GoogleInformationIsNotValid" xml:space="preserve">
    <value>The Google information is not valid</value>
  </data>
  <data name="Authentication.LoginInformationIsIncorrect" xml:space="preserve">
    <value>The account or password you entered is incorrect</value>
  </data>
  <data name="Authentication.NotPermission" xml:space="preserve">
    <value>Not permission!</value>
  </data>
  <data name="Authentication.PasswordMustNotBeEmpty" xml:space="preserve">
    <value>Password must not be empty</value>
  </data>
  <data name="Account.PhoneAlreadyExists" xml:space="preserve">
    <value>This phone number already exist on our system. Please use another phone number and try again</value>
  </data>
  <data name="Authentication.PhoneIsNotValid" xml:space="preserve">
    <value>Phone is not valid</value>
  </data>
  <data name="Authentication.PhoneMustNotBeEmpty" xml:space="preserve">
    <value>Phone must not be empty</value>
  </data>
  <data name="Authentication.PasswordAndRepeatPasswordMustSame" xml:space="preserve">
    <value>Password and Confirm password must be the same</value>
  </data>
  <data name="Authentication.RefreshTokenIsNotValid" xml:space="preserve">
    <value>Refresh Token is not valid</value>
  </data>
  <data name="Authentication.RefreshTokenMustNotBeEmpty" xml:space="preserve">
    <value>RefreshToken must not be empty</value>
  </data>
  <data name="Authentication.RepeatPasswordMustNotBeEmpty" xml:space="preserve">
    <value>Repeat password must not be empty</value>
  </data>
  <data name="Authentication.TenantNotFound" xml:space="preserve">
    <value>Tenant not found</value>
  </data>
  <data name="Authentication.Unauthorized" xml:space="preserve">
    <value>You are not authorized!</value>
  </data>
  <data name="Authentication.UserIdMustNotBeEmpty" xml:space="preserve">
    <value>UserId must not be empty</value>
  </data>
  <data name="Authentication.UserAlreadyExists" xml:space="preserve">
    <value>This user name already exist on our system. Please choose another user name and try again</value>
  </data>
  <data name="Authentication.UserDoesNotExist" xml:space="preserve">
    <value>User does not exist</value>
  </data>
  <data name="CommonMessage.BadQueryParameters" xml:space="preserve">
    <value>Query params are not valid</value>
  </data>
  <data name="CommonMessage.DataDoesNotExistOrWasDeleted" xml:space="preserve">
    <value>This data does not exist or was deleted</value>
  </data>
  <data name="CommonMessage.DataWasDeletedOrNotPermission" xml:space="preserve">
    <value>This data has been deleted or you do not have permission</value>
  </data>
  <data name="CommonMessage.RecordIsUpdating" xml:space="preserve">
    <value>This record is updating by other user. Please wait and reload to see new data!</value>
  </data>
  <data name="CommonMessage.IdIsNotValid" xml:space="preserve">
    <value>Id is not valid</value>
  </data>
  <data name="CommonMessage.ListIdsMustNotBeEmpty" xml:space="preserve">
    <value>List records need remove must not be empty</value>
  </data>
  <data name="CommonMessage.NotSupport3pTools" xml:space="preserve">
    <value>Not support 3p tool</value>
  </data>
  <data name="CommonMessage.PayloadIsNotValid" xml:space="preserve">
    <value>Request's payload is not valid</value>
  </data>
  <data name="CommonMessage.SystemErrorOccurred" xml:space="preserve">
    <value>An error has occurred in the system. Please try again in a few minutes</value>
  </data>
  <data name="SocialNetwork.LinkMustNotBeEmpty" xml:space="preserve">
    <value>Social network's link is not empty</value>
  </data>
  <data name="SocialNetwork.LogoMustNotBeEmpty" xml:space="preserve">
    <value>Social network's logo is not empty</value>
  </data>
  <data name="SocialNetwork.NameMustNotBeEmpty" xml:space="preserve">
    <value>Social network's name is not empty</value>
  </data>
  <data name="Utilities.ImageIsNotValid" xml:space="preserve">
    <value>Image is not valid</value>
  </data>
  <data name="Account.PasswordContainsAtLeastNCharacters" xml:space="preserve">
    <value>Contains at least {0} character(s)</value>
  </data>
  <data name="Account.PasswordHasAtLeast1LowercaseLetter" xml:space="preserve">
    <value>Have at least 1 lowercase letter</value>
  </data>
  <data name="Account.PasswordHasAtLeast1Number" xml:space="preserve">
    <value>Have at least 1 number</value>
  </data>
  <data name="Account.PasswordHasAtLeast1SpecialCharacter" xml:space="preserve">
    <value>Have at least 1 special character</value>
  </data>
  <data name="Account.PasswordHasAtLeast1UppercaseLetter" xml:space="preserve">
    <value>Have at least 1 uppercase letter</value>
  </data>
  <data name="Account.PasswordIsNotStrongEnough" xml:space="preserve">
    <value>Password is not strong enough</value>
  </data>
  <data name="Account.PasswordMustIncludeTheFollowingElements" xml:space="preserve">
    <value>Password must include the following elements</value>
  </data>
  <data name="Account.WasDeleted" xml:space="preserve">
    <value>Account was deleted</value>
  </data>
  <data name="Account.EmailHasBeenSentPreviously" xml:space="preserve">
    <value>Email has been sent previously, please try again later</value>
  </data>
  <data name="Account.NewPasswordMustNotBeEmpty" xml:space="preserve">
    <value>New password must not be empty</value>
  </data>
  <data name="Account.OldPasswordIsIncorrect" xml:space="preserve">
    <value>Old password is incorrect</value>
  </data>
  <data name="Account.OldPasswordMustNotBeEmpty" xml:space="preserve">
    <value>Old password must not be empty</value>
  </data>
  <data name="Account.PleaseWaitUntil" xml:space="preserve">
    <value>Please wait until &lt;strong&gt;{0}&lt;/strong&gt; to resend</value>
  </data>
  <data name="Account.VerificationCodeIsExpired" xml:space="preserve">
    <value>Verification code is expired</value>
  </data>
  <data name="Account.VerificationCodeIsNotValid" xml:space="preserve">
    <value>Verification code is not valid</value>
  </data>
  <data name="Account.VerificationCodeIsNotValidOrExpired" xml:space="preserve">
    <value>Verification code is not valid or expired</value>
  </data>
  <data name="Role.Receptionist" xml:space="preserve">
    <value>Receptionist</value>
  </data>
  <data name="Roles.Customer" xml:space="preserve">
    <value>Customer</value>
  </data>
  <data name="Roles.Doctor" xml:space="preserve">
    <value>Doctor</value>
  </data>
  <data name="Roles.Nurse" xml:space="preserve">
    <value>Nurse</value>
  </data>
  <data name="Roles.SuperAdmin" xml:space="preserve">
    <value>Admin</value>
  </data>
  <data name="CommonMessage.OtpIsNotValidOrExpired" xml:space="preserve">
    <value>OTP is not valid or expired</value>
  </data>
  <data name="Account.EmailAlreadyVerified" xml:space="preserve">
    <value>Email already verified</value>
  </data>
  <data name="SmsLimitExceeded" xml:space="preserve">
    <value>SMS limit exceeded. Please try again later.</value>
  </data>
  <data name="Account.HasBeenForcedToLogout" xml:space="preserve">
    <value>The account has been forced to log out</value>
  </data>
  <data name="Account.CodeAlreadyExists" xml:space="preserve">
    <value>This code already exist on our system</value>
  </data>
  <data name="Roles.OneOrMoreRolesNotFound" xml:space="preserve">
    <value>One or more roles were not found. Please check again</value>
  </data>
  <data name="Roles.CannotExist" xml:space="preserve">
    <value>The {0} role cannot exist</value>
  </data>
  <data name="Roles.CannotEmpty" xml:space="preserve">
    <value>Roles can not empty</value>
  </data>
  <data name="Account.CannotUpdateEmailVerified" xml:space="preserve">
    <value>The email cannot be changed because it has been verified</value>
  </data>
  <data name="Account.CannotUpdatePhoneVerified" xml:space="preserve">
    <value>The phone cannot be changed because it has been verified</value>
  </data>
  <data name="Articles.ContentMustNotBeEmpty" xml:space="preserve">
    <value>Content must not be empty</value>
  </data>
  <data name="Articles.ImageMustNotBeEmpty" xml:space="preserve">
    <value>Image must not be empty</value>
  </data>
  <data name="Articles.TitleMustNotBeEmpty" xml:space="preserve">
    <value>Title must not be empty</value>
  </data>
  <data name="TeamInfo.ImagesMustNotBeEmpty" xml:space="preserve">
    <value>Images must not be empty</value>
  </data>
  <data name="Articles.PostDateIsNotValid" xml:space="preserve">
    <value>Post date is not valid</value>
  </data>
  <data name="Articles.IsNotActive" xml:space="preserve">
    <value>Article is not active</value>
  </data>
  <data name="Articles.Posted" xml:space="preserve">
    <value>This article already posted</value>
  </data>
  <data name="Services.ContentMustNotBeEmpty" xml:space="preserve">
    <value>Content must not be empty</value>
  </data>
  <data name="Services.ImageIsNotValid" xml:space="preserve">
    <value>Image is not valid</value>
  </data>
  <data name="Services.NameMustNotBeEmpty" xml:space="preserve">
    <value>Service name must not be empty</value>
  </data>
  <data name="Services.StatusIsInThisStatusAlready" xml:space="preserve">
    <value>Service is in this status already</value>
  </data>
  <data name="WebImages.StatusIsInThisStatusAlready" xml:space="preserve">
    <value>Image is in this status already</value>
  </data>
  <data name="Articles.ContentEnglishMustNotBeEmpty" xml:space="preserve">
    <value>Content in English must not be empty</value>
  </data>
  <data name="Articles.TitleEnglishMustNotBeEmpty" xml:space="preserve">
    <value>Title in English must not be empty</value>
  </data>
  <data name="Services.ContentEnglishMustNotBeEmpty" xml:space="preserve">
    <value>Content in English must not be empty</value>
  </data>
  <data name="Services.NameEnglishMustNotBeEmpty" xml:space="preserve">
    <value>Service name in English must not be empty</value>
  </data>
  <data name="Services.AnswerMustNotBeEmpty" xml:space="preserve">
    <value>Answer {0} must not be empty</value>
  </data>
  <data name="Services.questionMustNotBeEmpty" xml:space="preserve">
    <value>Question {0} must not be empty</value>
  </data>
  <data name="Contacts.EmailsContainNotValid" xml:space="preserve">
    <value>The list includes invalid emails</value>
  </data>
  <data name="Contacts.PhonesContainNotValid" xml:space="preserve">
    <value>The list contains invalid phone numbers</value>
  </data>
  <data name="Contacts.PhoneMustNotBeEmpty" xml:space="preserve">
    <value>Phone must not be empty</value>
  </data>
  <data name="Contacts.DistrictIsNotValid" xml:space="preserve">
    <value>District is not valid</value>
  </data>
  <data name="Contacts.EmailMustNotBeEmpty" xml:space="preserve">
    <value>Email must be not empty</value>
  </data>
  <data name="Contacts.ProvinceIsNotValid" xml:space="preserve">
    <value>Province is not valid</value>
  </data>
  <data name="Contacts.WardIsNotValid" xml:space="preserve">
    <value>Ward is not valid</value>
  </data>
  <data name="CommonMessage.SlugIsNotValid" xml:space="preserve">
    <value>The slug is not valid</value>
  </data>
  <data name="Account.AlreadyVerified" xml:space="preserve">
    <value>The account has already been verified</value>
  </data>
  <data name="Gender.Female" xml:space="preserve">
    <value>Female</value>
  </data>
  <data name="Gender.Male" xml:space="preserve">
    <value>Male</value>
  </data>
  <data name="Gender.None" xml:space="preserve">
    <value>--Not specified--</value>
  </data>
  <data name="DoctorTitle.Ths" xml:space="preserve">
  <value>Master</value>
</data>
<data name="DoctorTitle.TS" xml:space="preserve">
  <value>PhD</value>
</data>
<data name="DoctorTitle.TSKH" xml:space="preserve">
  <value>Doctor of Science</value>
</data>
<data name="DoctorDegree.PSG" xml:space="preserve">
  <value>Associate Professor</value>
</data>
<data name="DoctorDegree.GS" xml:space="preserve">
  <value>Professor</value>
</data>
<data name="DoctorRank.BS" xml:space="preserve">
  <value>Doctor</value>
</data>
<data name="DoctorRank.BSCKI" xml:space="preserve">
  <value>Specialist Doctor Level I</value>
</data>
<data name="DoctorRank.BSNT" xml:space="preserve">
  <value>Resident Doctor</value>
</data>
<data name="DoctorRank.BSCKII" xml:space="preserve">
  <value>Specialist Doctor Level II</value>
</data>
<data name="Ths" xml:space="preserve">
  <value>MSc</value>
</data>
<data name="TS" xml:space="preserve">
  <value>PhD</value>
</data>
<data name="TSKH" xml:space="preserve">
  <value>ScD</value>
</data>
<data name="PSG" xml:space="preserve">
  <value>Assoc. Prof.</value>
</data>
<data name="GS" xml:space="preserve">
  <value>Prof.</value>
</data>
<data name="BS" xml:space="preserve">
  <value>Dr</value>
</data>
<data name="BSCKI" xml:space="preserve">
  <value>Dr I</value>
</data>
<data name="BSCKII" xml:space="preserve">
  <value>Dr II</value>
</data>
<data name="BSNT" xml:space="preserve">
  <value>Dr Res.</value>
</data>
<data name="Infor.None" xml:space="preserve">
  <value>No data</value>
</data>
<data name="CommonMessage.MapURLIsNotValid" xml:space="preserve">
    <value>Map url is not valid</value>
  </data>
  <data name="Doctor.TitleIsRequired" xml:space="preserve">
  <value>Doctor title is required.</value>
</data>
<data name="Doctor.DegreeIsRequired" xml:space="preserve">
  <value>Doctor degree is required.</value>
</data>
<data name="Doctor.RankIsRequired" xml:space="preserve">
  <value>Doctor rank is required.</value>
</data>
<data name="Doctor.ExpertiseVnIsRequired" xml:space="preserve">
  <value>Vietnamese expertise is required.</value>
</data>
<data name="Doctor.ExpertiseEnIsRequired" xml:space="preserve">
  <value>English expertise is required.</value>
</data>
<data name="Doctor.SpecialtyIsRequired" xml:space="preserve">
  <value>At least one specialty must be selected.</value>
</data>
<data name="Doctor.SpecialtyIdInvalid" xml:space="preserve">
  <value>Specialty ID is invalid.</value>
</data>
<data name="Doctor.NotHaveSpecialty" xml:space="preserve">
  <value>Doctor don't have this specialty</value>
</data>
<data name="CommonMessage.FacilityIsNotValid" xml:space="preserve">
    <value>Facility is not valid</value>
  </data>
 <data name="CommonMessage.ZoneIsNotValid" xml:space="preserve">
    <value>Zone is not valid</value>
  </data>
  <data name="HealthFacility.NameVnIsNotEmpty" xml:space="preserve">
  <value>Please enter the health facility name in Vietnamese.</value>
</data>
<data name="HealthFacility.NameEnIsNotEmpty" xml:space="preserve">
  <value>Please enter the health facility name in English.</value>
</data>
<data name="HealthFacility.LogoIsNotEmpty" xml:space="preserve">
  <value>Please select a logo for the health facility.</value>
</data>
<data name="HealthFacility.DescriptionVnIsNotEmpty" xml:space="preserve">
  <value>Please enter the description in Vietnamese.</value>
</data>
<data name="HealthFacility.DescriptionEnIsNotEmpty" xml:space="preserve">
  <value>Please enter the description in English.</value>
</data>
<data name="HealthFacility.SummaryVnIsNotEmpty" xml:space="preserve">
  <value>Please enter the summary in Vietnamese.</value>
</data>
<data name="HealthFacility.SummaryEnIsNotEmpty" xml:space="preserve">
  <value>Please enter the summary in English.</value>
</data>
<data name="HealthFacility.NotHaveSpecialty" xml:space="preserve">
  <value>Facility don't have this specialty</value>
</data>
<data name="HealthFacility.InvalidMapUrl" xml:space="preserve">
  <value>The map URL is not valid.</value>
</data>
<data name="HealthFacility.SpecialtyIsRequired" xml:space="preserve">
  <value>Please select at least one specialty.</value>
</data>
<data name="HealthFacility.TypeIsRequired" xml:space="preserve">
  <value>Please select at least one facility type.</value>
</data>
<data name="HealthFacility.NotHaveZone" xml:space="preserve">
  <value>Facility don't have this zone</value>
</data>
<data name="HealthProfile.NameIsNotEmpty" xml:space="preserve">
  <value>Please enter the patient's full name.</value>
</data>
<data name="HealthProfile.GenderIsInvalid" xml:space="preserve">
  <value>Invalid gender.</value>
</data>
<data name="HealthProfile.InvalidDateOfBirth" xml:space="preserve">
  <value>Date of birth is invalid. Please select a date between 1950 and now.</value>
</data>
<data name="HealthProfile.InvalidCICode" xml:space="preserve">
  <value>Citizen identification number (CCCD) is invalid.</value>
</data>
<data name="HealthService.NameVnIsNotEmpty" xml:space="preserve">
  <value>Vietnamese service name must not be empty.</value>
</data>
<data name="HealthService.NameEnIsNotEmpty" xml:space="preserve">
  <value>English service name must not be empty.</value>
</data>
<data name="HealthService.PriceIsNotEmpty" xml:space="preserve">
  <value>Service price must not be empty.</value>
</data>
<data name="HealthService.PriceMustBeGreaterThanZero" xml:space="preserve">
  <value>Service price must be greater than 0.</value>
</data>
<data name="HealthService.InvalidDoctor" xml:space="preserve">
  <value>Doctor is not valid.</value>
</data>
<data name="HealthService.InvalidType" xml:space="preserve">
  <value>Service type is not valid.</value>
</data>
<data name="HealthService.InvalidSpecialty" xml:space="preserve">
  <value>Specialty is not valid.</value>
</data>
<data name="Payment.AmountMustBeGreaterThanZero" xml:space="preserve">
  <value>Amount must be greater than zero.</value>
</data>
<data name="Payment.BookingIsRequired" xml:space="preserve">
  <value>Booking is required.</value>
</data>
<data name="Payment.BookingIsNotValid" xml:space="preserve">
  <value>Booking is not valid.</value>
</data>
<data name="Payment.PaymentMethodIsInvalid" xml:space="preserve">
  <value>Payment method is invalid.</value>
</data>
<data name="Payment.TransactionContentMaxLength" xml:space="preserve">
  <value>Transaction content must not exceed 255 characters.</value>
</data>
<data name="ServiceTimeRule.SlotDurationMustBeGreaterThanZero" xml:space="preserve">
  <value>Slot duration must be greater than zero.</value>
</data>
<data name="ServiceTimeRule.MaxPatientsMustBeGreaterThanZero" xml:space="preserve">
  <value>Maximum number of patients must be greater than zero.</value>
</data>
<data name="ServiceTimeRule.StartTimeIsRequired" xml:space="preserve">
  <value>Start time is required.</value>
</data>
<data name="ServiceTimeRule.StartTimeMustBeLessThanEndTime" xml:space="preserve">
  <value>Start time must be less than end time.</value>
</data>
<data name="ServiceTimeRule.StartBreakTimeIsRequired" xml:space="preserve">
  <value>Start break time is required.</value>
</data>
<data name="ServiceTimeRule.StartBreakTimeMustBeGreaterThanStartTime" xml:space="preserve">
  <value>Start break time must be greater than start time.</value>
</data>
<data name="ServiceTimeRule.StartBreakTimeMustBeLessThanEndBreakTime" xml:space="preserve">
  <value>Start break time must be less than end break time.</value>
</data>
<data name="ServiceTimeRule.EndBreakTimeIsRequired" xml:space="preserve">
  <value>End break time is required.</value>
</data>
<data name="ServiceTimeRule.EndBreakTimeMustBeGreaterThanStartBreakTime" xml:space="preserve">
  <value>End break time must be greater than start break time.</value>
</data>
<data name="ServiceTimeRule.EndTimeIsRequired" xml:space="preserve">
  <value>End time is required.</value>
</data>
<data name="ServiceTimeRule.EndTimeMustBeGreaterThanEndBreakTime" xml:space="preserve">
  <value>End time must be greater than end break time.</value>
</data>
<data name="ServiceTimeRule.DayOfWeekIsInvalid" xml:space="preserve">
  <value>Invalid day of week. Please select a valid weekday.</value>
</data>
<data name="ServiceTimeRule.IsExist" xml:space="preserve">
  <value>Time rule already exists</value>
</data>
<data name="User.NameIsRequired" xml:space="preserve">
  <value>Name is required</value>
</data>
<data name="User.PhoneIsInvalid" xml:space="preserve">
  <value>Phone number is invalid</value>
</data>
<data name="User.EmailIsInvalid" xml:space="preserve">
  <value>Email is invalid</value>
</data>
<data name="Booking.ServiceIsRequired" xml:space="preserve">
  <value>Service is required</value>
</data>
<data name="Booking.ServiceIsNotValid" xml:space="preserve">
  <value>Service is not valid</value>
</data>
<data name="Booking.HealthProfileIsRequired" xml:space="preserve">
  <value>Health profile is required</value>
</data>
<data name="Booking.HealthProfileIsNotValid" xml:space="preserve">
  <value>Health profile is not valid</value>
</data>
<data name="Booking.DateIsRequired" xml:space="preserve">
  <value>Date is required</value>
</data>
<data name="Booking.DateMustBeInFuture" xml:space="preserve">
  <value>Date must be today or later</value>
</data>
<data name="Booking.TimeSlotIsRequired" xml:space="preserve">
  <value>Time slot is required</value>
</data>
<data name="Booking.HasFeedback" xml:space="preserve">
  <value>Booking has feedback</value>
</data>
<data name="Booking.NoAvailableTimeSlots" xml:space="preserve">
  <value>No available time slots</value>
</data>
<data name="Booking.InvalidDayOfWeek" xml:space="preserve">
  <value>Invalid day of the week</value>
</data>
<data name="Booking.MaxPatientReached" xml:space="preserve">
  <value>Maximum number of patients reached</value>
</data>
<data name="Booking.IsNotDoing" xml:space="preserve">
  <value>Status is not 'Doing'</value>
</data>
<data name="Booking.IsNotWaiting" xml:space="preserve">
  <value>Status is not 'Waiting'</value>
</data>
<data name="Booking.IsNotConfirmed" xml:space="preserve">
  <value>Status is not 'Confirmed'</value>
</data>
<data name="Zone.NameVnIsNotEmpty" xml:space="preserve">
  <value>Zone name (Vietnamese) must not be empty</value>
</data>
<data name="Zone.NameEnIsNotEmpty" xml:space="preserve">
  <value>Zone name (English) must not be empty</value>
</data>
<data name="Zone.LocationVnIsNotEmpty" xml:space="preserve">
  <value>Location (Vietnamese) must not be empty</value>
</data>
<data name="Zone.LocationEnIsNotEmpty" xml:space="preserve">
  <value>Location (English) must not be empty</value>
</data>
<data name="Zone.SpecialtiesIsRequired" xml:space="preserve">
  <value>At least one specialty must be selected</value>
</data>
<data name="Zone.IsExist" xml:space="preserve">
  <value>Zone already exists</value>
</data>
<data name="Zone.SpecialtyIsExistInOtherZone" xml:space="preserve">
  <value>Specialty already exists in another zone</value>
</data>
</root>